"use strict";(()=>{var h=Object.defineProperty;var m=Object.getOwnPropertySymbols;var S=Object.prototype.hasOwnProperty,P=Object.prototype.propertyIsEnumerable;var u=(e,r,o)=>r in e?h(e,r,{enumerable:!0,configurable:!0,writable:!0,value:o}):e[r]=o,a=(e,r)=>{for(var o in r||={})S.call(r,o)&&u(e,o,r[o]);if(m)for(var o of m(r))P.call(r,o)&&u(e,o,r[o]);return e};var f=async e=>{let r=Date.now(),o={};Object.entries(e).forEach(([c,t])=>{o[c]={score:t,timestamp:r},console.debug(`[Scam-Protector] Caching score for ${c}: ${t}`)}),await chrome.storage.local.set(o)},b=async e=>{let r=await chrome.storage.local.get(e),o={},c=Date.now(),t=15*60*1e3;return e.forEach(s=>{let n=r[s];n&&c-n.timestamp<t&&(o[s]=n.score,console.debug(`[Scam-Protector] Using cached score for ${s}: ${n.score}`))}),o},p=async()=>{try{await chrome.storage.local.clear(),console.debug("[Scam-Protector] All cached scores cleared")}catch(e){console.error("[Scam-Protector] Error clearing cache:",e)}},w=async e=>{if(!e.length)return{};try{let r="https://scam-protector.com/api/bulk-score";console.debug(`[Scam-Protector] Fetching scores for ${e.length} hosts from bulk API`),console.debug(`[Scam-Protector] Hosts: ${e.join(", ")}`);let o=await fetch(r,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({hosts:e})});if(!o.ok)throw new Error(`API returned status: ${o.status}`);let c=await o.json();return console.debug("[Scam-Protector] API response scores:",c),c}catch(r){console.error("[Scam-Protector] API error:",r),console.debug("[Scam-Protector] Falling back to individual domain checks");let o={};return await Promise.all(e.map(async c=>{try{let t=await y(c);o[c]=t,console.debug(`[Scam-Protector] ${c} individual score: ${t}`)}catch(t){console.error(`Error fetching score for ${c}:`,t),o[c]=50}})),o}},y=async e=>{try{let r="https://scam-protector.com/api/domain-security";console.debug(`[Scam-Protector] Checking single domain ${e}`);let o=await fetch(r,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({domain:e})});if(!o.ok)throw new Error(`API returned status: ${o.status}`);let c=await o.json();return console.debug(`[Scam-Protector] ${e} domain check returned score: ${c.score}`),c.score}catch(r){return console.error(`[Scam-Protector] Error checking domain ${e}:`,r),50}};function $(e,r){let o=[];for(let c=0;c<e.length;c+=r)o.push(e.slice(c,c+r));return o}chrome.runtime.onMessage.addListener((e,r,o)=>{if(e.action==="getScores"){let{hosts:c}=e;return(async()=>{try{if(e.clearCache){await p(),o({success:!0,message:"Cache cleared"});return}let t=await b(c),s=c.filter(l=>t[l]===void 0);if(s.length===0){console.debug(`[Scam-Protector] All ${c.length} hosts found in cache`),o(t);return}console.debug(`[Scam-Protector] Fetching scores for ${s.length} missing hosts`);let n=$(s,10),i={};for(let l of n){let g=await w(l);i=a(a({},i),g)}await f(i);let d=a(a({},t),i);o(d)}catch(t){console.error("[Scam-Protector] Error processing score request:",t),o({})}})(),!0}});})();
